{"version":3,"file":"static/js/451.c368c690.chunk.js","mappings":"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","sources":["view/pages/authentication/reset-password/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\n\nimport LeftContent from \"../leftContent\";\nimport Footer from \"../footer\";\nimport axios from \"axios\";\n\nexport default function ResetPassword() {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [form] = Form.useForm();\n\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const token = params.get('token');\n\n  console.log(token)\n  const onFinish = () => {\n    axios.post(`http://localhost:3001/v1/auth/reset-password?token=${token}`, {password})\n    .then(response=> {\n      console.log(response.data)\n      if(response.status == 204){\n        message.success(\"Password is resseted\")\n      }\n    }).catch(e=>{\n      console.log(e.response.data.message)\n      message.error(e.response.data.message)\n    })\n  };\n  const onFinishFailed = () => {\n    message.error(\"Submit failed!\");\n  };\n\n  return (\n    <Row gutter={[32, 0]} className=\"hp-authentication-page\">\n      <LeftContent />\n\n      <Col lg={12} span={24} className=\"hp-py-sm-0 hp-py-md-64\">\n        <Row className=\"hp-h-100\" align=\"middle\" justify=\"center\">\n          <Col\n            xxl={11}\n            xl={15}\n            lg={20}\n            md={20}\n            sm={24}\n            className=\"hp-px-sm-8 hp-pt-24 hp-pb-48\"\n          >\n            <h1>Reset Password</h1>\n            <p className=\"hp-mt-8 hp-text-color-black-60\">\n              Email verification is done. Please choose another password\n            </p>\n\n            <Form\n              layout=\"vertical\"\n              name=\"basic\"\n              className=\"hp-mt-sm-16 hp-mt-32\"\n              form={form}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                label=\"Password :\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    type: \"string\",\n                    min: 6,\n                  },\n                  {\n                    validator: (_, value) =>\n                      /^(?=.*[A-Z])(?=.*\\d).+$/.test(value) ? Promise.resolve() : Promise.reject(new Error(\"Password must contain at least one uppercase letter and one number.\"))\n                  },\n                ]}\n              >\n                <Input.Password\n                  id=\"password\"\n                  value={password}\n                  onChange={e=> setPassword(e.target.value)}\n                  placeholder=\"At least 6 characters\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Confirm Password :\"\n                name=\"confirm-password\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    type: \"string\",\n                    min: 6,\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(new Error('The new password that you entered do not match!'));\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password\n                  id=\"confirm-password\"\n                  placeholder=\"At least 6 characters\"\n                  value={confirmPassword}\n                  onChange={e=> setConfirmPassword(e.target.value)}\n                />\n              </Form.Item>\n\n              <Form.Item className=\"hp-mt-16 hp-mb-8\">\n                <Button block type=\"primary\" htmlType=\"submit\">\n                  Reset Password\n                </Button>\n              </Form.Item>\n            </Form>\n\n            <div className=\"hp-form-info hp-text-center\">\n              <span className=\"hp-text-color-black-80 hp-text-color-dark-40 hp-caption hp-mr-4\">\n                Go back to\n              </span>\n\n              <Link\n                to=\"/pages/authentication/login\"\n                className=\"hp-text-color-primary-1 hp-text-color-dark-primary-2 hp-caption\"\n              >\n                Login\n              </Link>\n            </div>\n\n            <Footer />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n"],"names":["ResetPassword","_useState","useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_Form$useForm","Form","useForm","form","search","window","location","token","URLSearchParams","get","console","log","_jsxs","Row","gutter","className","children","_jsx","LeftContent","Col","lg","span","align","justify","xxl","xl","md","sm","layout","name","onFinish","axios","concat","then","response","data","status","message","success","catch","e","error","onFinishFailed","Item","label","rules","required","type","min","validator","_","value","test","Promise","resolve","reject","Error","Input","Password","id","onChange","target","placeholder","_ref","getFieldValue","Button","block","htmlType","Link","to","Footer"],"sourceRoot":""}