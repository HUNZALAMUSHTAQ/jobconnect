{"version":3,"file":"static/js/815.d38acb65.chunk.js","mappings":"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","sources":["view/pages/authentication/login/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Row, Col, Form, Input, Button, Checkbox,message, Spin } from \"antd\";\r\n\r\nimport LeftContent from \"../leftContent\";\r\nimport Footer from \"../footer\";\r\nimport { loginUser } from \"../../../../redux/auth/authActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state);\r\n  console.log(auth)\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(isLoggedIn){\r\n      history.push('/')\r\n    }\r\n  },[isLoggedIn])\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onFinishFailed = () => {\r\n    message.error(\"Submit failed!\");\r\n  };\r\n\r\n  const login = async () => {\r\n    await dispatch(loginUser({ email, password }));\r\n  };\r\n  return (\r\n    <Row gutter={[32, 0]} className=\"hp-authentication-page\">\r\n      <LeftContent />\r\n\r\n      <Col lg={12} span={24} className=\"hp-py-sm-0 hp-py-md-64\">\r\n        <Row className=\"hp-h-100\" align=\"middle\" justify=\"center\">\r\n          <Col\r\n            xxl={11}\r\n            xl={15}\r\n            lg={20}\r\n            md={20}\r\n            sm={24}\r\n            className=\"hp-px-sm-8 hp-pt-24 hp-pb-48\"\r\n          >\r\n            <h1 className=\"hp-mb-sm-0\">Login</h1>\r\n            <p className=\"hp-mt-sm-0 hp-mt-8 hp-text-color-black-60\">\r\n              {/* Welcome back, please login to your account.\r\n               */}\r\n               <FormattedMessage id=\"login-welcome-back\" />\r\n            </p>\r\n\r\n            <Form\r\n              layout=\"vertical\"\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              className=\"hp-mt-sm-16 hp-mt-32\"\r\n              onFinish={login}\r\n              form={form}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"Email :\"\r\n                className=\"hp-mb-16\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"The input is not valid E-mail!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your E-mail!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Password :\"\r\n                className=\"hp-mb-8\"\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  {\r\n                    type: \"string\",\r\n                    min: 8,\r\n                  },\r\n                  {\r\n                    validator: (_, value) =>\r\n                      /^(?=.*[A-Z])(?=.*\\d).+$/.test(value)\r\n                        ? Promise.resolve()\r\n                        : Promise.reject(\r\n                            new Error(\r\n                              \"Password must contain at least one uppercase letter and one number.\"\r\n                            )\r\n                          ),\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Row align=\"middle\" justify=\"space-between\">\r\n                <Form.Item className=\"hp-mb-0\">\r\n                  <Checkbox name=\"remember\"><FormattedMessage id=\"remember-me\" /></Checkbox>\r\n                </Form.Item>\r\n\r\n                <Link\r\n                  className=\"hp-button hp-text-color-black-80 hp-text-color-dark-40\"\r\n                  to=\"/pages/authentication/recover-password\"\r\n                >\r\n                  <FormattedMessage id=\"forgot-password\" />\r\n                </Link>\r\n              </Row>\r\n              {/* {loading && <Spin />} */}\r\n\r\n              <Form.Item className=\"hp-mt-16 hp-mb-8\">\r\n                {/* <Link to=\"/\"> */}\r\n                <Button loading={loading} block type=\"primary\" htmlType=\"submit\">\r\n                  Sign in\r\n                </Button>\r\n                {/* </Link> */}\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            <Col className=\"hp-form-info hp-text-center\">\r\n              <span className=\"hp-text-color-black-80 hp-text-color-dark-40 hp-caption hp-font-weight-400 hp-mr-4\">\r\n                {/* Donâ€™t you have an account? */}\r\n                <FormattedMessage id=\"login-have-account\" />\r\n              </span>\r\n\r\n              <Link\r\n                className=\"hp-text-color-primary-1 hp-text-color-dark-primary-2 hp-caption\"\r\n                to=\"/pages/authentication/register\"\r\n              >\r\n                {/* Create an account */}\r\n                <FormattedMessage id=\"create-an-account\" />\r\n                \r\n              </Link>\r\n            </Col>\r\n\r\n            <Footer />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"],"names":["Login","dispatch","useDispatch","auth","useSelector","state","console","log","_Form$useForm","Form","useForm","form","_slicedToArray","history","useHistory","loading","isLoggedIn","useEffect","push","_useState","useState","_useState2","email","setEmail","_useState3","_useState4","password","setPassword","login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loginUser","stop","apply","arguments","_jsxs","Row","gutter","className","children","_jsx","LeftContent","Col","lg","span","align","justify","xxl","xl","md","sm","FormattedMessage","id","layout","name","initialValues","remember","onFinish","onFinishFailed","message","error","Item","label","rules","type","required","Input","value","onChange","e","target","min","validator","_","test","Promise","resolve","reject","Error","Password","Checkbox","Link","to","Button","block","htmlType","Footer"],"sourceRoot":""}